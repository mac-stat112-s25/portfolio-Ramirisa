---
title: "ica-DataWrang.qmd"
editor: visual
---
```{r}

library(dplyr)
```



```{r}
# Load tidyverse & data
library(tidyverse)
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")
```


```{r}
# Get a background map
library(socviz)
data(county_map)

# Make a choropleth map
library(RColorBrewer)  # For the color scale
library(ggthemes) # For theme_map
elections |> 
  mutate(county_fips = as.character(county_fips)) |> 
  mutate(county_fips = 
           ifelse(nchar(county_fips) == 4, paste0("0", county_fips), county_fips)) |> 
  ggplot(aes(map_id = county_fips, fill = cut(repub_pct_20, breaks = seq(0, 100, by = 10)))) +
    geom_map(map = county_map) +
    scale_fill_manual(values = rev(brewer.pal(10, "RdBu")), name = "% Republican") +
    expand_limits(x = county_map$long, y = county_map$lat)  + 
    theme_map() +
    theme(legend.position = "right") + 
    coord_equal()
```

```{r}
# What's the first argument? The second?
select(elections, c(state_name, county_name, dem_pct_20, dem_pct_16))
```

```{r}
elections |> 
  select(state_name, county_name, dem_pct_20, dem_pct_16)
```


```{r}
# Without a pipe
filter(elections, state_name == "Minnesota")
```
```{r}
# With a pipe
elections |> 
  filter(state_name == "Minnesota")
```

```{r}
# Without pipes
filter(select(elections, c(state_name, county_name, dem_pct_20, dem_pct_16)), state_name == "Minnesota")
```
```{r}
# With pipes: all verbs in 1 row
elections |> select(state_name, county_name, dem_pct_20, dem_pct_16) |> filter(state_name == "Minnesota")
```
```{r}
# With pipes: each verb in a new row
elections |> 
  select(state_name, county_name, dem_pct_20, dem_pct_16) |> 
  filter(state_name == "Minnesota")
```
```{r}
# We can even do this with UN-tidyverse code in "base" R
elections[elections$state_name == "Minnesota", c(1, 4, 8, 12)]
```
```{r}
elections |> 
  select(state_name, county_name, dem_pct_20, dem_pct_16) |> 
  filter(state_name == "Minnesota")
```
```{r}
# Store the results
mn <- elections |> 
  select(state_name, county_name, dem_pct_20, dem_pct_16) |> 
  filter(state_name == "Minnesota")

# Always check it out to confirm it's what you want it to be!
head(mn)
```
```{r}
# Define elections_small
elections_small <- elections |>
  select(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16)

# Check out the first 6 rows to confirm your code did what you think it did!
head(elections_small)
```
```{r}

elections_small |>
 filter(state_name == "Hawaii")
```

```{r}

elections_small |> 
  filter(repub_pct_20 > 93.97)
```

```{r}

elections_small |> 
  filter(repub_pct_20 >= 93.97)
```

```{r}

elections_small |>
 filter(state_name == "Texas") |>
 filter(dem_pct_20 > 65)
```

```{r}

elections_small |>
 filter(state_name == "Texas", dem_pct_20 > 65)
```

```{r}

elections_small |>
  arrange(repub_pct_20) |>
  head()
```

```{r}

elections_small |>
  arrange(desc(repub_pct_20)) |>
  head()
```
```{r}

elections_small |> 
  mutate(diff_20 = repub_pct_20 - dem_pct_20) |> 
  head()
```

```{r}

elections_small |> 
  mutate(repub_votes_20 = round(total_votes_20 * repub_pct_20/100)) |> 
  head()
```

