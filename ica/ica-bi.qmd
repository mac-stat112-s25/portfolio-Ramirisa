---
title: "Bivariate Viz"
---

```{r}
# Import data
survey <- read.csv("https://hash-mac.github.io/stat112site-s25/data/survey.csv")

# How many students have now filled out the survey?
50


# What type of variables do we have?

```




Use this file for practice with the **bivariate viz** in-class activity.  Refer to the class website for details.

```{r}
data.frame(temp_3pm = c(24, 26, 20, 15, 15, 15), temp_9am = c(14, 18, 15, 13, 11, 11))
```

```{r}
weather <- data.frame(temp_3pm = c(24, 26, 20, 15, 15, 0, 40, 60, 57, 44, 51, 75),
                      location = rep(c("A", "B"), each = 6))
weather
```
```{r}
weather <- data.frame(rain_today = c("no", "no", "no", "no", "yes", "no", "yes", "no", "yes", "yes", "no", "yes"),
                        location = c(rep("A", 7), rep("B", 5)))
    weather
```

```{r}
# Load data
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")

# Check it out
head(elections)
```

```{r}
# Add a layer of points for each county
# Take note of the geom: geom_point
ggplot(elections, aes(y = total_votes_16, x = total_votes_12)) +
  geom_point()
```


```{r}
ggplot(elections, aes(y = total_votes_16, x = total_votes_12)) +
  geom_point(shape=3)
```

```{r}
ggplot(elections, aes(y = total_votes_16, x = total_votes_12)) +
  geom_point(color = "blue")
```

```{r}
# Add a layer that represents each county by the state it's in
# Take note of the geom and the info it needs to run!
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_text(aes(label = state_abbr))
```

```{r}
# The relationship seems very linear to me going up positively. With a very strong relationship towards eachother seeing how black it gets.The outlier I see motly would be TX.
```


```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point() +
  geom_smooth()
```

```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point(shape = 17, size = 3) +
  geom_smooth() 
  
```

```{r}
ggplot(elections, aes(y = repub_pct_20, x = repub_pct_16)) +
  geom_point() +
  geom_smooth(method = "lm")
```




```{r}
# Scatterplot of repub_pct_20 vs median_rent

ggplot(elections, aes(y = repub_pct_20, x = median_rent)) +
  geom_point() +
  geom_smooth(method = "lm")


# Scatterplot of repub_pct_20 vs median_age
ggplot(elections, aes(y = repub_pct_20, x = median_age)) +
  geom_point() +
  geom_smooth(method = "lm")

#I would say that the graph including median rent, since it seems to have more of a linear relationship than the other graph. A negative one specifically. 
```


```{r}
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_point()
#This graph isn't necessarily helpful because I don't really think dots are the best to see the relation to a number variable to a categorical variable.
```

```{r}
# Side-by-side violin plots
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_violin()
# Side-by-side boxplots (defined below)
ggplot(elections, aes(y = repub_pct_20, x = historical)) +
  geom_boxplot()
```


```{r}
#I've learned that red states tend to be more republican, blue not so much but still decently high percentage wise. All the staes historically seem to be mostly republican overall.
```

```{r}
# Name two "bad" things about this plot
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density()
```

```{r}
# What does scale_fill_manual do?
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red"))
```

```{r}
# What does alpha = 0.5 do?
# Play around with different values of alpha, between 0 and 1
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density(alpha = 0.5) +
  scale_fill_manual(values = c("blue", "purple", "red"))
```

```{r}
# What does facet_wrap do?!
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_density() +
  scale_fill_manual(values = c("blue", "purple", "red")) +
  facet_wrap(~ historical)
```

```{r}
# Let's try a similar grouping strategy with a histogram instead of density plot.
# Why is this terrible?
ggplot(elections, aes(x = repub_pct_20, fill = historical)) +
  geom_histogram(color = "white") +
  scale_fill_manual(values = c("blue", "purple", "red"))
```

```{r}
# I love the density plots, but I also don't mind the dot plots mainly because I feel I'm more used to those, box plots are cool too
# A benefit of density plat is being able to see a linear relationship at certain points if you need to.
# A con would be it would take a little longer to gether info of individual categorical info I think.
```


```{r}
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar()
```

```{r}
ggplot(elections, aes(x = winner_20)) +
  geom_bar() +
  facet_wrap(~ historical)
```

```{r}
# A stacked bar plot
# How are the "historical" and "winner_20" variables mapped to the plot, i.e. what roles do they play?
# They're relationship on the graph is to basically seperate total dem and rep in different colored states. To show how dominant repub is.
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar()
```

```{r}
# A faceted bar plot
ggplot(elections, aes(x = winner_20)) +
  geom_bar() +
  facet_wrap(~ historical)
```

```{r}
# A side-by-side bar plot
# Note the new argument to geom_bar
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar(position = "dodge")
```

```{r}
# A proportional bar plot
# Note the new argument to geom_bar
ggplot(elections, aes(x = historical, fill = winner_20)) +
  geom_bar(position = "fill")
```

```{r}
#Pro easy to distinguish categorical variables
#con total number may not be considered, since these are just percentages
#Favorite bar plaot would have to be side by side bar plot because I feel like visually the difference in amount is more noticable when it comes to looking for if something is more or less
```

```{r}
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv")
```

```{r}
weather <- read.csv("https://mac-stat.github.io/data/weather_3_locations.csv")

# How do 3pm temperatures (temp3pm) differ by location?
ggplot(weather, aes(x = temp3pm, fill = location)) + 
  geom_density(alpha = 0.5)
  
  
```
```{r}
# Load data
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")

# Check it out
head(elections)
```



```{r}
ggplot(weather, aes(y = temp3pm, x = location)) + 
  geom_boxplot()
```

```{r}
# How might we predict the 3pm temperature (temp3pm) by the 9am temperature (temp9am)?
ggplot(weather, aes(y = temp3pm, x = temp9am)) + 
  geom_point()
```
```{r}
# Install ggridges package
library(ggridges)

# Make our first joy plot
# THINK: What DON'T you like about this?
ggplot(elections, aes(x = repub_pct_20, y = state_abbr)) + 
  geom_density_ridges()
```




```{r}
# YOUR TURN: color/fill the ridges according to a state's historical voting patterns 
# and add meaningful axis labels
ggplot(elections, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20), fill = historical)) + 
  geom_density_ridges(alpha = 0.5) + 
  labs(y = "state", x = "2020 Republican support (%)") + 
  scale_fill_manual(values = c("blue", "purple", "red"))
```

```{r}
elections_by_state <- read.csv("https://mac-stat.github.io/data/election_2020_by_state.csv")

ggplot(elections_by_state, aes(y = repub_pct_20, x = repub_pct_16)) + 
  geom_point()
```

```{r}
# Check it out
ggplot(elections_by_state, aes(x = repub_pct_20, y = state_abbr)) + 
  geom_point(color = "red")
```
```{r}
# Check it out
ggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + 
  geom_point(color = "red")
```
```{r}
# Finally, add ANOTHER layer of points for the 2016 outcomes
# What info does this new geom_point() layer need to run?
ggplot(elections_by_state, aes(x = repub_pct_20, y = fct_reorder(state_abbr, repub_pct_20))) + 
  geom_point(color = "red") + 
  geom_point(aes(x = repub_pct_16, y = state_abbr))

#I mean we are missing labels for what the different color dots even mean
```

