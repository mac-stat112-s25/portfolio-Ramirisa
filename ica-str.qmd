---
title: "ica-str"
editor: visual
---

```{r}
courses <- read.csv("https://mac-stat.github.io/data/registrar.csv")

# Check it out
head(courses)
```

```{r}
library(tidyverse)

classes <- data.frame(
  sem        = c("SP2023", "FA2023", "SP2024"),
  area       = c("History", "Math", "Anthro"),
  enroll     = c("30 - people", "20 - people", "25 - people"),
  instructor = c("Ernesto Capello", "Lori Ziegelmeier", "Arjun Guneratne")
)

classes
```


```{r}
# Define a new variable "num" that adds up the number of characters in the area label
classes |> 
  mutate(num = str_length(area))
#       column = count of characters
```

```{r}
# Change the areas to "history", "math", "anthro"
classes |> 
  mutate(area = str_to_lower(area))
  #       column = lower case column 
```

```{r}
# Create a variable that id's which courses were taught in spring 
classes |> 
  mutate(spring = str_detect(sem, "SP"))
#       column = look for SP in column, say true if so, false if not
```

```{r}
# Change the semester labels to "fall2023", "spring2024", "spring2023"
classes |> 
  mutate(sem = str_replace(sem, "SP", "spring")) |> 
  mutate(sem = str_replace(sem, "FA", "fall"))
#       column = replace labels with new labels in column
```

```{r}
# In the enroll variable, change all e's to 3's (just because?)
classes |> 
  mutate(enroll = str_replace_all(enroll, "e", "3"))
#        column = in column --- replace character with character
```

```{r}
# Use sem to create 2 new variables, one with only the semester (SP/FA) and 1 with the year
classes |> 
  mutate(semester = str_sub(sem, 1, 2),
         year = str_sub(sem, 3, 6))
#        new column = separate characters by number order first 2,
#       another new column = separate characters by number characters 3-6
```

```{r}
# How can we do this after mutating?
classes |> 
  mutate(spring = str_detect(sem, "SP")) |> 
  filter(spring == TRUE)
#       new column = in original column, look for SP 
#       new column = Identify spring as SP, if it has SP then true
```

```{r}
# Construct a table that indicates the number of classes offered in each day/time slot
# Print only the 6 most popular time slots
courses |> 
  count(days, time) |> 
  arrange(desc(n)) |> 
  head()
# count amount of time and day data exist total, given total of day groups and timed groups add them all up and oreder them from which combination go from least to most, show first 6 rows
```

```{r}
courses_clean <- courses |> 
  separate(avail_max, c("avail", "max"), sep = " / ") |> 
  mutate(enroll = as.numeric(max) - as.numeric(avail)) |> 
  separate(number, c("dept", "number", "section"))

  
head(courses_clean)
```

